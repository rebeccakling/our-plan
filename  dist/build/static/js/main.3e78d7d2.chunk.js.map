{"version":3,"sources":["store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","serviceWorker.js","connectors/Navbar/SignedInLinks.js","store/actions/authActions.js","connectors/Navbar/SignedOutLinks.js","connectors/Navbar/navbar.js","connectors/dashboard/Notifications.js","connectors/projects/ProjectSummary.js","connectors/projects/ProjectList.js","connectors/dashboard/Dashboard.js","connectors/projects/ProjectDetails.js","connectors/auth/SignIn.js","connectors/auth/SignUp.js","store/actions/projectActions.js","connectors/projects/CreateProject.js","connectors/auth/FirebaseAuth.js","connectors/App/App.js","index.js"],"names":["initState","authError","isLogedIn","authReduser","state","action","payload","type","console","log","err","message","projects","projectReduser","rootReducer","combineReducers","auth","authReducer","project","projectReducer","firestore","firestoreReducer","firebase","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Boolean","window","location","hostname","match","connect","createAction","dispatch","signOut","getState","getFirebase","then","props","initials","profile","output","className","to","style","cursor","onClick","SignedOutLinks","withFirebase","useSelector","user","fb","currentUser","links","isEmpty","Notifications","notifications","map","item","key","id","content","moment","time","toDate","fromNow","ProjectSummary","title","authorFirstName","authorLastName","createAt","calendar","ProjectList","Dashboard","this","React","Component","compose","ordered","firestoreConnect","collection","orderBy","limit","ownProps","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","pathname","onSubmit","htmlFor","onChange","withRouter","creds","credentials","signInWithEmailAndPassword","catch","SignUp","firstName","lastName","handelChange","handelSubmit","signUp","localAuth","newUser","getFirestore","userName","toLowerCase","displayName","toUpperCase","createUser","username","createProject","authorId","uid","add","split","authorID","Date","CreateProject","history","push","FirebaseManager","onAuthStateChanged","isLoaded","Fragment","fireb","FirebaseAuth","exact","path","component","ProjectDetails","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseApp","rrfConfig","firebaseConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","rrfProps","config","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e78d7d2.chunk.js","sourcesContent":["const initState = {\n    authError: null,\n    isLogedIn: false,\n}\n\nconst authReduser = (state = initState, action, payload) => {\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n        console.log('login error')\n      return {\n        ...state, \n        authError: 'Login failed'\n    }\n    case 'LOGIN':\n      console.log('login success')\n      return {\n        ...state,\n        isLogedIn: true,\n        authError: null,\n      }\n    case 'LOGOUT': \n      console.log('sigout success')\n      return {\n        ...state,\n        isLogedIn: false,\n      }\n    case 'ONCHANGE': \n      return {\n        ...state,\n        isLogedIn: payload,\n      }\n    case 'SIGNUP': \n      console.log('signup success')\n      return {\n        ...state,\n        authError: null,\n      }\n    case 'SIGNUP_ERROR': \n      console.log('signup error')\n      return {\n        ...state,\n        authError: action.err.message,\n      }\n\n    default:\n      return state      \n  }\n}\n\nexport default authReduser","const initState = {\n    projects: [\n        // {id: 1, title: 'Hejsan', content: 'blah blah blah'},\n        // {id: 2, title: 'Hallo', content: 'blah blah blah'},\n        // {id: 3, title: 'Köp blåbär', content: 'blah blah blah'}\n    ]\n}\n\nconst projectReduser = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            //console.log('created project', action.project)\n            return state\n        case 'CREATE_PROJECT_ERROR': \n           // console.log('create project error', action.err)\n            return state\n        default:\n            return state\n    }\n}\n\nexport default projectReduser ","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer,\n})\n\nexport default rootReducer\n","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// initialize Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAIy-mQLSQ1dKppi__gdhBsWZ3y_-Ox23M\",\n  authDomain: \"master-thesis-foodie.firebaseapp.com\",\n  databaseURL: \"https://master-thesis-foodie.firebaseio.com\",\n  projectId: \"master-thesis-foodie\",\n  storageBucket: \"master-thesis-foodie.appspot.com\",\n  messagingSenderId: \"338631578892\",\n  appId: \"1:338631578892:web:79d4bafee682f24555a529\",\n  measurementId: \"G-Z8Y53VEQ4Q\"\n}\n\n firebase.initializeApp(firebaseConfig) \n firebase.firestore()\n//  .settings({ timestampsInSnapshots: true }) \n\nexport default firebase","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n   \n  let initials = props.profile.initials || ''\n  let output = '' \n\n  if (initials !== 'undefined' && initials !== '' && initials !== null) { \n    output = initials\n  }\n\n\treturn (\n\t\t<ul className=\"right\">\n      <li><NavLink to='/CreateProject'>New Project</NavLink></li>\n      <li style={{cursor: 'pointer'}}><span onClick={props.signOut}>Log Out</span></li>\n      <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n      {output}\n      </NavLink></li>\n    </ul>\n\t)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","import { createAction } from 'redux-actions'\n\n\nexport const signIn = (credentials) => {\n\treturn (dispatch, getState, {getFirebase}) => {\n\t\tconst firebase = getFirebase()\n\n\t\tfirebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n\t\t).then(() => {\n\t\t\tdispatch({ type: 'LOGIN' })\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: 'LOGIN_ERROR', err })\n\t\t})    \n\t}\n}\n\nexport const signOut = () => {\n\treturn (dispatch, getState, {getFirebase}) => {\n\t\tconst firebase = getFirebase()\n\t\tfirebase.auth().signOut().then(() => {\n\t\t\tdispatch({ type:'LOGOUT' })\n\t\t})\n\t}\n}\n\nexport const ONCHANGE = 'ONCHANGE'\nexport const _onSyncChange = createAction(ONCHANGE)\n\nexport const onSyncChange = payload => (dispatch, getState ) => {\n\tdispatch(_onSyncChange(payload))\n}\nexport const RESET_SIGNUP_COMPLETED = 'RESET_SIGNUP_COMPLETED'\nexport const resetSignUp = () => dispatch => {\n\tdispatch({ type: 'RESET_SIGNUP_COMPLETED'})\n}\nexport const signUp = (newUser) => {\n\treturn (dispatch, getState, { getFirebase, getFirestore}) => {\n\n\t\tconst firebase = getFirebase()\n\t\t//const firestore = getFirestore()\n\n\t\tconst userName = `${newUser.firstName.toLowerCase()}-${newUser.lastName.toLowerCase()}`\n\t\tconst displayName = `${newUser.firstName} ${newUser.lastName}`\n\t\tconst email = newUser.email\n\n\n\t\tlet initials = ''\n  \t\tif (newUser.firstName[0] !== 'undefined' && newUser.lastName !== '' && newUser.lastName !== null) { \n\t\t\tinitials = newUser.firstName[0].toUpperCase()\n\t\t}\n\t\tif (newUser.lastName !== 'undefined' && newUser.lastName !== '' && newUser.lastName !== null) { \n\t\t\tinitials = `${initials} ${newUser.lastName[0].toUpperCase()}`\n\t\t}\n\n\t\tfirebase.createUser(\n\t\t{\n\t\t\temail,\n\t\t\tpassword: newUser.password\n\t\t},\n    \t{\n\t\t\tusername: userName,\n\t\t\temail, \n\t\t\tdisplayName,\n\t\t\tinitials,\n\t\t}\n\t  ).then(() => {\n\t\t// action for signup completed\n    })\n\t}\n}\n\t  \n\n\n/*\n\n-----------------------------------------------------------------------------------------------------\n\t\tfirebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((resp) => {\n*/\n\t\t/*\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstname[0] + newUser.lastName[0]\n\t  })\n\t  \n\t const user = firebase.auth().currentUser\n\n\t user.updateProfile({\n\t\tdisplayName: `${newUser.firstName} ${newUser.lastName}`,\n\t\tinitials: `${newUser.firstName[0].toUpperCase()} ${newUser.lastName[0].toUpperCase()}`,\n\t}).then(function() {\n\t\tconsole.log('great success')\n\t}).catch(function(error) {\n\t\tconsole.log('Sorrry dude. Error')\n\t});\n\t  \n    }).then(() => {\n\t\tdispatch({ type: 'SIGNUP'})\n    }).catch((err) => {\n    \tdispatch({ type: 'SIGNUP_ERROR', err })\t\n\t})\n\t*/\n\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n\treturn (\n    <ul className=\"right\">\n      <li><NavLink to='/signup'>Signup</NavLink></li>\n      <li><NavLink to='/signin'>Log In</NavLink></li> \n    </ul>\n\t)\n}\n\nexport default SignedOutLinks","import React from 'react'\n// import {connect} from 'react-redux'\nimport { Link } from 'react-router-dom'\n// import { actionCreators } from './actions'\n// import { actionCreators as restaurantPagesActionCreators} from './../RestaurantsPage/actions'\n// import { bindActionCreators } from 'redux'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { useSelector } from 'react-redux'\nimport { isEmpty, withFirebase } from 'react-redux-firebase'\n\nconst Navbar = (props) => {\n  //const firebase = useFirebase()\n  const auth = useSelector(state => state.firebase.auth)\n  const profile = useSelector(state => state.firebase.profile)\n  // const fb = useSelector(state => state.firebase)\n\n  const user = props.fb.auth().currentUser;\n\n  //console.log('currentUser: ', props.fb.auth().currentUser)\n\n  console.log('profile: ', profile)\n  console.log('user: ', user)\n  const links = !isEmpty(auth) ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">Foodie</Link>\n        { links }\n      </div>\n    </nav>\n  )\n}\n\nexport default withFirebase(Navbar)\n\n\n// const mapStateToProps = state => ({\n// \ttitle: state.restaurants.title,\t\n// \tmyColor: state.navbar.myColor\n// })\n\n// const mapDispatchToProps = dispatch => ({\n// \tactions: bindActionCreators(actionCreators, dispatch ),\n// \tactionsRestaurantsPage: bindActionCreators(restaurantPagesActionCreators, dispatch)\n// })\n\n\n// class Navbar extends React.Component {\n//     constructor() {\n//         super()\n// \t\tthis.changeColor = this.changeColor.bind(this)\n// \t\t// this.changeTitle = this.changeTitle.bind(this)\n// \t}\n\n// \tchangeColor(e) {\n//         console.log('hello')\n// \t\t  this.props.actions.changeColor({one: '#f5f5f0', two: '#e0e0d1'})\n// \t\t//this.props.actions.changeMyColor('#558000')\n// \t}\n// \t// changeTitle(e) {\n//     //     console.log('hello')\n//     //     this.props.actionsRestaurantsPage.changeTitle('hej hej ny title')\n//     // }\n// \trender() {\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t<header>\n// \t\t\t\t\t<nav>\n// \t\t\t\t\t\t<div style={{backgroundColor: this.props.myColor}}>\n// \t\t\t\t\t\t<Link to=\"/\"> Startsida</Link> | \n// \t\t\t\t\t\t<Link to=\"/about\"> Om foodie</Link>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<br />\n// \t\t\t\t\t\t<button onClick={this.changeColor}>change color navbar</button>\n// \t\t\t\t\t\t<br />\n// \t\t\t\t\t\t<br />\n// \t\t\t\t\t\t{/* <button onClick={this.changeTitle}>change title</button> */}\n// \t\t\t\t\t</nav>\n// \t\t\t\t</header>\t\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }\n\n\n\n\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const {notifications} = props\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            { notifications && notifications.map(item => {\n              return (\n                <li key={item.id}>\n                  <span className=\"pink-text\">{item.user} </span>\n                  <span>{item.content}</span>\n                  <div className=\"grey-text note-date\">\n                    {moment(item.time.toDate()).fromNow()}\n                  </div>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment'\n\n\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content gray text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>Post by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary\n  ","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n        <Link to={'/project/' + project.id} key={project.id}>\n        <ProjectSummary project={project} />\n        </Link>\n        )     \n      })}\n    </div>\n  )\n}\n\nexport default ProjectList ","import React from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\n\nclass Dashboard extends React.Component {\n  render() {\n    const { projects, notifications } = this.props\n    return ( \n      <div className=\"dashboard container\">\n        <div className=\"row\">\n            {/* Till projekt  */}\n          <div className=\"col s12 m6\">\n              <ProjectList  projects={projects}/>\n          </div>\n            {/* Till Notifications */}\n          <div className=\"col s12 m5 offset-m1\">\n              <Notifications notifications={notifications} />\n          </div> \n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.firestore.ordered.projects,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createAt', 'desc']},\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n  const { project } = props\n\n\n  if (project) {\n    return ( \n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{ project.title }</span>\n              <p>{ project.content}</p>\n          </div>  \n          <div className=\"card-action grey lighten-4-text\">\n              <div>Written by {project.authorFirstName} {project.authorLastName} </div>\n              <div>{moment(project.createAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div> \n    )\n  }else {\n    return (\n      <div className=\"container center\">\n          <p>Looading...</p>\n      </div>\n    )\n  }   \n}\n\nconst mapStateToProps = (state, ownProps) => {\n  //console.log(state)\n  const id = ownProps.match.params.id\n  const projects = state.firestore.data.projects\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps), \n  firestoreConnect([\n      { collection: 'projects' }\n  ]) \n\n)(ProjectDetails)\n  ","import React, { Component } from 'react'\nimport  { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { isEmpty } from 'react-redux-firebase'\nimport { signIn } from '../../store/actions/authActions'\nimport { withRouter } from 'react-router'\n\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.signIn(this.state)\n  }\n  render() {\n    if (!isEmpty(this.props.auth) && this.props.location.pathname === '/signin') {\n      return <Redirect to='/' />\n    }\n\n    const { authError } = this.props\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} value={this.state.email}  />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}  value={this.state.password} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">SIGN IN</button>\n              <div className=\"red-text center\">\n                { authError ? <p>{authError}</p> : null }\n              </div>\n            </div>\n        </form>   \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      authError: state.auth.authError,\n      auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignIn))\n ","import React, { Component } from 'react'\nimport  { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { isEmpty } from 'react-redux-firebase'\nimport { withRouter } from 'react-router'\nimport { signUp } from './../../store/actions/authActions'\n//import signUp from 'connectors/auth/SignUp'\n\nclass SignUp extends Component {\n  state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: ''\n  }\n\nhandelChange = (e) => {\n  this.setState({\n    [e.target.id]: e.target.value\n  })\n}\n\nhandelSubmit = (e) => {\n  e.preventDefault()\n  this.props.signUp(this.state)\n}\n  render() {\n    if (!isEmpty(this.props.auth) ) {\n      return <Redirect to='/' />\n    }\n\n  const { authError } = this.props\n  return (\n      <div className=\"container\">\n        <form onSubmit={this.handelSubmit} className=\"white\">\n          <h5 className=\"grey text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handelChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handelChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handelChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handelChange}/>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">SIGN UP</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{ authError }</p> : null } \n            </div>\n          </div>\n        </form>   \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      auth: state.firebase.auth,\n      localAuth: state.auth,\n      authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser)),\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignUp))","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        //make async call to database\n        const firestore = getFirestore()\n        const state = getState()\n        const profile = state.firebase.profile\n\n        console.log('hej', state)\n        const authorId = state.firebase.auth.uid\n        firestore.collection('projects').add({\n            ...project, \n            authorFirstName: profile.displayName.split(' ')[0],\n            authorLastName: profile.displayName.split(' ')[1],\n            authorID: authorId,\n            createAt: new Date()\n        }).then(() => {\n          dispatch({ type: 'CREATE_PROJECT', project })\n        }).catch((err) => {\n          dispatch({ type: 'CREATE_PROJECT_ERROR', err })\n        })\n    }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\n\n\nclass CreateProject extends Component {\n  state = {\n      title: '',\n      content: ''\n  }\n\n  handelChange = (e) => {\n    this.setState({\n        [e.target.id]: e.target.value\n    })\n  }\n\n  handelSubmit = (e) => {\n      e.preventDefault()\n      //console.log(this.state)\n      this.props.createProject(this.state)\n      this.props.history.push('/')\n  }\n  render() {\n    // const { auth } = this.props\n    // if (!auth.uid) return <Redirect to='signin' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handelSubmit} className=\"white\">\n          <h5 className=\"grey text text-darken-3\">Create project</h5>\n          <div className=\"input-field\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" id=\"title\" onChange={this.handelChange}/>\n          </div>\n          <div className=\"input-field\">\n              <label htmlFor=\"content\">Content</label>\n              <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handelChange}></textarea>  \n          </div>\n          <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 z-depth-0\">CREATE</button>\n          </div>\n        </form>   \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        // auth: state.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>  { \n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","import React from 'react'\n// import { connect, useSelector } from 'react-redux'\n// import { useFirebaseConnect, isLoaded, isEmpty } from 'react-redux-firebase'\n\nimport { onSyncChange as onSyncChangeActions} from 'store/actions/authActions'\n\nclass FirebaseManager extends React.Component {\n  componentWillMount() {\n    const firebase = this.props.fb\n    firebase.auth().onAuthStateChanged(user => {\n      onSyncChangeActions({ isLogedIn: !!user, user })\n    })\n  }\n  render() {\n    return  null\n  }\n}\n\n\nexport default FirebaseManager ","import React from 'react'\n// import { connect } from 'react-redux'\n// import { bindActionCreators } from 'redux'\n// import firebase from 'firebase'\n\nimport { withRouter } from 'react-router'\nimport {Switch, Route } from 'react-router-dom'\n// import SignIn from 'connectors/SignIn/signIn'\n// import About from 'connectors/About/About'\nimport Navbar from 'connectors/Navbar/navbar'\n// import RestaurantsPage from 'connectors/RestaurantsPage/restaurants'\n// import FirebaseManager from 'connectors/FirebaseManager'\n\n\nimport Dashboard from 'connectors/dashboard/Dashboard'\nimport ProjectDetails from 'connectors/projects/ProjectDetails'\nimport SignIn from 'connectors/auth/SignIn'\nimport SignUp from 'connectors/auth/SignUp'\nimport CreateProject from 'connectors/projects/CreateProject'\nimport FirebaseAuth from 'connectors/auth/FirebaseAuth'\nimport { useSelector } from 'react-redux'\nimport { isLoaded, withFirebase, isEmpty } from 'react-redux-firebase'\n\n\n// if (firebase.apps.length < 1) {\n//   firebase.initializeApp({ \n//     apiKey: \"AIzaSyD__stvI0GuA21uUmghVZpeb5tHCgyTw8A\",\n//     authDomain: \"foodie-82b8e.firebaseapp.com\",\n//     databaseURL: \"https://foodie-82b8e.firebaseio.com\",\n//   })\n// }\n\n// const mapStateToProps = state => ({\n//   // auth: state.auth,\n//   // color: state.navbar.color,\n//   // hejhej: 'hello'\n// })\n\n// const mapDispatchToProps = dispatch => ({})\n\nconst App = props => {\n\n    const auth = useSelector(state => state.firebase.auth)\n    console.log('App props', props)\n    if(!isLoaded(auth)) {\n      return <div>Loading...</div>\n    }\n\n    if (isEmpty(auth) && props.location.pathname === '/signup') {\n      return (\n        <React.Fragment>\n          <div className=\"App\">\n            <Navbar fb={props.fireb} />\n            <SignUp />\n          </div>\n        </React.Fragment>  \n      )\n    }\n\n    if (isEmpty(auth)) {\n      return (\n        <React.Fragment>\n          <div className=\"App\">\n            <Navbar fb={props.fireb} />\n            <SignIn />\n          </div>\n        </React.Fragment>  \n      )\n    }\n    //if(isEmpty(auth)) return <Redirect to='/SignIn' />\n    \n    return (\n      <React.Fragment>\n        <FirebaseAuth fb={props.fireb} />\n        <div className=\"App\">\n          <Navbar fb={props.fireb} />\n          <Switch>\n            <Route exact path='/' component={ Dashboard } />\n            <Route path='/project/:id' component={ ProjectDetails } />\n            <Route path='/signin' component={ SignIn } />\n            <Route path='/signup' component={ SignUp } />\n            <Route path='/CreateProject' component={ CreateProject } />\n          </Switch>\n        </div>\n\n\n\n\n\n        {/* <FirebaseManager firebase={firebase} />\n        <div className=\"App\" style={{backgroundColor: this.props.color}}> */}\n        \n          {/* <Navbar /> */}\n          {/* {this.props.hejhej} */}\n          {/* <Switch> */}\n            {/* <Route exact path=\"/\" component={ () =><SignIn firebase={firebase} />} />\n            <Route path=\"/about\" component={ About } />\n            <Route path=\"/restaurants\" component={ RestaurantsPage } /> */}\n          {/* </Switch> */}\n\n          {/* {(this.props.auth.isLogedIn) && (\n            <span>\n              {this.props.auth.restaurants.map((item,i) => {\n                return (<li key={`restaurants-listing-${i}`}>\n                  {item.name}\n                </li>\n              )\n\n              })}\n            </span>\n          )} */}\n        {/* </div> */}\n      </React.Fragment>\n     \n    )\n  }\n\n\n\n// export default connect(\n//   mapStateToProps, \n//   mapDispatchToProps)\n// (App);\n\nexport default withRouter(withFirebase(App))\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter} from 'react-router-dom'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './store/reducers/rootReducer'\nimport firebaseConfig from './config/fbConfig'\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport firebaseApp from 'firebase/app'\n//import firebase from 'firebase'\nimport * as serviceWorker from './serviceWorker'\nimport App from './connectors/App/App'\nimport './index.css'\n\n\n//Create my store, is wrapping in all my application \nconst store = createStore(\n  rootReducer,\n  compose(\n    composeWithDevTools(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(firebaseApp )\n    )\n  )\n)\nconsole.log('store: ',store)\n\n//Needed for the new version \nconst rrfConfig = {\n    firebaseConfig,\n    useFirestoreForProfile: true,\n    userProfile: 'users',\n    attachAuthIsReady: true,\n}\n\n//Needed for the new version \n const rrfProps = {\n   firebase: firebaseApp,\n   config: rrfConfig,\n   dispatch: store.dispatch,\n   createFirestoreInstance // <- needed if using firestore\n}\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n   <ReactReduxFirebaseProvider {...rrfProps}>\n    <BrowserRouter>\n      <App fireb={firebaseApp} />\n    </BrowserRouter>\n   </ReactReduxFirebaseProvider>\n  </Provider>, document.getElementById('root'))\n\nserviceWorker.unregister()\n\n\n\n// ----------------------------------------------------------\n//Denna Fungerar\n// import React from 'react'\n// // import { createStore, applyMiddleware, compose } from 'redux'\n// import { Provider } from 'react-redux'\n// import thunk from 'redux-thunk'\n// import ReactDOM from 'react-dom'\n// // import combinedReducers from 'store/index'\n// import App from './connectors/App/App'\n// import * as serviceWorker from './serviceWorker'\n// import './index.css'\n\n// import rootReducer from './store/reducers/rootReducer'\n// import { createStore, applyMiddleware, compose } from 'redux'\n// import { reduxFirestore, getFirestore } from 'redux-firestore'\n// import { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\n// import fbConfig from './config/fbConfig'\n\n\n// //Create my store, is wrapping in all my applications\n// const store = createStore(rootReducer,\n//     compose(\n//         applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n//         // reduxFirestore(fbConfig),\n//         // reactReduxFirebase(fbConfig)\n//         )\n//     )\n\n// ReactDOM.render(\n//     <Provider store={store}> \n//         <App />\n//     </Provider>\n\n// , document.getElementById('root'))\n// serviceWorker.unregister()\n\n// --------------------------------------------------------------\n \n// //Create my store, is wrapping in all my applications\n// const store = createStore(combinedReducers, compose(\n//  applyMiddleware(thunk),\n//  window.devToolsExtension ? window.devToolsExtension() : f => f\n// ))\n\n// ReactDOM.render(\n//     <Provider store={store}> \n//         <App />\n//     </Provider>\n\n// , document.getElementById('root'))\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n\n\n"],"sourceRoot":""}